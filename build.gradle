buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url 'http://maven.tmatesoft.com/content/repositories/releases/'
        }
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots'
        }
    }

    dependencies {
        classpath 'pl.allegro.tech.build:axion-release-plugin:1.3.4',
            'org.figurate:gradle-bundle-plugin:1.0.1-SNAPSHOT'
    }
}

apply plugin: 'groovy'
apply plugin: 'bundle'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'pl.allegro.tech.build.axion-release'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    // amdatu for REST documentation..
    ivy {
        url 'http://repository.amdatu.org/release/'
        layout 'pattern', {
            artifact "[artifact]/[artifact]-[revision].[ext]"
        }
    }
}

ext {
    romeVersion = '1.5.0'
}

dependencies {
    compile "com.rometools:rome:$romeVersion","com.rometools:rome-fetcher:$romeVersion",
            "com.rometools:rome-opml:$romeVersion","com.rometools:rome-modules:$romeVersion",
            'org.slf4j:slf4j-api:1.7.10',
            'org.codehaus.groovy:groovy-all:2.4.3',
//            'biz.aQute.bnd:bndlib:2.4.0',
            'net.sf.ehcache:ehcache:2.10.0', 'org.jsoup:jsoup:1.8.2',
            'org.ccil.cowan.tagsoup:tagsoup:1.2.1', 'org.jclarion:image4j:0.7',
            'org.apache.jackrabbit:jackrabbit-jcr-commons:2.10.0', 'javax.jcr:jcr:2.0',
            'org.bouncycastle:bcprov-jdk16:1.46', 'org.yaml:snakeyaml:1.15'

    // HTTP dependecies
    compile 'org.apache.felix:org.apache.felix.scr.annotations:1.9.6', 'javax.ws.rs:jsr311-api:1.1.1',
            'org.amdatu.web.rest.doc:org.amdatu.web.rest.doc:1.1.1'

    runtime 'org.mnode.juicer:juicer:0.9.2-SNAPSHOT'

    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4',
            'ch.qos.logback:logback-classic:1.1.3', 'org.apache.jackrabbit:jackrabbit-core:2.10.0'

    embed "com.rometools:rome:$romeVersion","com.rometools:rome-fetcher:$romeVersion",
            "com.rometools:rome-opml:$romeVersion","com.rometools:rome-modules:$romeVersion",
            "com.rometools:rome-utils:$romeVersion",
            'org.jdom:jdom:2.0.2',
            'org.ccil.cowan.tagsoup:tagsoup:1.2.1', 'org.jclarion:image4j:0.7'
}
jar {
    // Include project license in all artifacts
    from(project.rootDir) {
        include "LICENSE.txt"
    }

    manifest {
        instruction 'Export-Package', 'org.mnode.newsagent*,com.rometools.rome*,com.rometools.fetcher*,*'
        instruction 'Import-Package', '!com.rometools*,!net.sf.image4j*,!org.ccil.cowan.tagsoup*,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers,javax.xml.parsers,javax.xml.validation,*'
        instruction 'Service-Component', 'OSGI-INF/org.mnode.newsagent.http.FeedControllerImpl.xml'
        instruction 'Bundle-Category', 'rss,feed'
    }
}

javadoc {
    if (JavaVersion.current().isJava8Compatible()) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}
    
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

scmVersion {
    tag {
        prefix = 'newsagent'
    }
    versionCreator 'versionWithBranch'
}

group = 'org.mnode.newsagent'
version = rootProject.scmVersion.version
description = '''\
A feed aggregator library for Java
'''

ext {
    isReleaseVersion = !version.endsWith("SNAPSHOT")

    // sonatype credentials
    sonatypeUsername = project.hasProperty('sonatypeUsername') ? project.getProperty('sonatypeUsername') : ''
    sonatypePassword = project.hasProperty('sonatypePassword') ? project.getProperty('sonatypePassword') : ''
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name project.name
                packaging 'jar'
                description project.description
                url 'http://basepatterns.org/newsagent'

                scm {
                    url 'https://github.com/benfortuna/newsagent'
                    connection 'scm:git@github.com:benfortuna/newsagent.git'
                    developerConnection 'scm:git@github.com:benfortuna/newsagent.git'
                }

                licenses {
                    license {
                        name 'Newsagent - License'
                        url 'https://raw.githubusercontent.com/benfortuna/newsagent/master/LICENSE.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'fortuna'
                        name 'Ben Fortuna'
                    }
                }
            }
        }
    }
}
