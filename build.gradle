buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'http://maven.tmatesoft.com/content/repositories/releases/'
        }
    }

    dependencies {
        classpath 'au.com.ish.gradle:release:2.2.2'
    }
}

apply plugin: 'groovy'
apply plugin: 'osgi'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'release'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
}

ext {
    romeVersion = '1.5.0'
}

dependencies {
    compile "com.rometools:rome:$romeVersion","com.rometools:rome-fetcher:$romeVersion",
            "com.rometools:rome-opml:$romeVersion","com.rometools:rome-modules:$romeVersion",
            'org.slf4j:slf4j-api:1.7.10',
            'org.codehaus.groovy:groovy-all:2.4.3',
//            'biz.aQute.bnd:bndlib:2.4.0',
            'net.sf.ehcache:ehcache:2.10.0', 'net.sf.jtidy:jtidy:r938',
            'org.ccil.cowan.tagsoup:tagsoup:1.2.1', 'org.jclarion:image4j:0.7',
            'org.apache.jackrabbit:jackrabbit-jcr-commons:2.10.0', 'javax.jcr:jcr:2.0',
            'org.bouncycastle:bcprov-jdk16:1.46'

    runtime 'org.mnode.juicer:juicer:0.9.2-SNAPSHOT'

    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4',
            'ch.qos.logback:logback-classic:1.1.3', 'org.apache.jackrabbit:jackrabbit-core:2.10.0'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

release {
    failOnSnapshotDependencies = true
    // allow modifications due to bug in the release plugin..
    allowLocalModifications = true
    releaseDryRun = releaseDryRun
    scm = 'git'
}

group = 'org.mnode.newsagent'
version = release.projectVersion
description = '''\
A feed aggregator library for Java
'''

ext {
    isReleaseVersion = !version.endsWith("SNAPSHOT")

    // sonatype credentials
    sonatypeUsername = project.hasProperty('sonatypeUsername') ? project.getProperty('sonatypeUsername') : ''
    sonatypePassword = project.hasProperty('sonatypePassword') ? project.getProperty('sonatypePassword') : ''
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name project.name
                packaging 'jar'
                description project.description
                url 'http://basepatterns.org/newsagent'

                scm {
                    url 'https://github.com/benfortuna/newsagent'
                    connection 'scm:git@github.com:benfortuna/newsagent.git'
                    developerConnection 'scm:git@github.com:benfortuna/newsagent.git'
                }

                licenses {
                    license {
                        name 'Newsagent - License'
                        url 'https://raw.githubusercontent.com/benfortuna/newsagent/master/LICENSE'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'fortuna'
                        name 'Ben Fortuna'
                    }
                }
            }
        }
    }
}
